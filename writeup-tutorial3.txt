hasil tampilan: https://imgur.com/a/V2PSC

1. Ketika mengakses "localhost:8080/student/add?npm=12345&name=chanek&gpa=3.43"
>>> Tidak menampilkan hasil yang error, halaman add.html yang ditampilkan.

2. Ketika mengakses "localhost:8080/student/add?npm=12345&name=chanek"
>>> Pesan error muncul, karena pada link diatas tidak diberikan nilai 'gpa' yang diperlukan dalam request parameter, 
	sedangkan pada request parameter, nilai gpa mwmiliki nilai required true.

3. "localhost:8080/student/add?npm=12345&name=chanek&gpa=3.43" lalu buka "localhost:8080/student/view?npm=12345"
>>> Akan terbuka halaman ADD.html lalu, saat view dijanlankan menampilkan halaman view.html dengan teks berisikan
	NPM, Name, dan GPA dari chanek.

4. Ketika membuka "localhost:8080/student/view?npm=12345" sehabis merestart program
>>> Muncul label error, karena isi dari ArrayList studentService saat itu masih kosong. Jadi tidak ada data yang bisa 
	ditampilkan. Kenapa arraylist kosong? karena data yang ada pada saat program dijalankan sebelumnya tidak disimpan dimana - mana.

5. "localhost:8080/student/add?npm=12345&name=chanek&gpa=3.43" lalu buka "localhost:8080/student/view?npm=12345"
>>> Data Chanek muncul dengan garis dibawahnya.
>>> Setelah menambahkan "localhost:8080/student/add?npm=12373&name=chanada&gpa=3.75" data chanada juga muncul dibawah
	chanek dengan nomor 2.
	bukti ( h**ps://imgur.com/a/9VrQb )


------------------------------------------------------------------
*asumsi pada link selalu ada npm-nya*


Method 'SELECT STUDENT'

@RequestMapping("/student/view/{npm}")
	public String viewNPM(@PathVariable Optional<String> npm,Model model) {
			StudentModel student = studentService.selectStudent(npm.get());
			if (student==null) return "viewerror";
			model.addAttribute("student", student);
			return "view";
	}


Method 'DELETE STUDENT'

@RequestMapping("/student/delete/{npm}")
	public String viewNPM(@PathVariable Optional<String> npm) {
			StudentModel student = studentService.selectStudent(npm.get());
			if (student==null) return "deleteerror";
			studentService.removeStudent(npm.get());
			return "delete";
	}

Deskripsi: 
pertama menggunakan method selectStudent untuk  mencari student dengan npm yang diberikan,
jika tidak ada student yang ditemukan akan membuka laman deleteerror.html,
jika ada, maka student akan dikeluarkan dari list studentService.
Hasil bisa dilihat jika kita membuka viewall.


--------------------------------------------------------------------------------------

Ringkasan materi yang telah dipelajari:

Pada tutorial ini hal yang saya sadari ialah saya merasa lebih memahami mengenai konsep MVC.
Sebelumnya MVC pernah dipelajari juga dalam PPW namun saya masih sedikit bingunng dengan maksud model dan servicenya.
Pemahaman saya saat ini, model adalah objek yang menyimpan informasi mengenai suatu hal,
dan service berdasarkan penjelasan berguna untuk menghubungkan controller dengan database,
berhubung saat ini belum menggunakan database fungsi aslinya belum terlalu terlihat tapi sudah cukup jelas.



Felisitas / 1506689540

*saya masih pake manual karena eclipse error lagi*